# Default values for nginx-svc.
# This is a YAML-formatted file.
# Declare variables to be passed into your templates.

replicaCount: 2


imagePullPolicy: Always

images:
  nginx: nginx-nossl:1.1.2
  nginxssl: nginx-ssl:1.1.2

name: ssl

repository: skckadiyala

imageCredentials:
  name: regsecret
  registry: 
  username: 
  password: 

DNSHost: ""
DNSHostSSL: ""

secrets:
  # provide base64 encoded certificate
  cert: LS0tLS1CRUdJTiBDRVJUSUZJQ0FURS0tLS0tCk1JSUZnRENDQkdpZ0F3SUJBZ0lTQThlNGhlSUtXVGZaZVNvZ2R0aHZLdHRXTUEwR0NTcUdTSWIzRFFFQkN3VUEKTUVveEN6QUpCZ05WQkFZVEFsVlRNUll3RkFZRFZRUUtFdzFNWlhRbmN5QkZibU55ZVhCME1TTXdJUVlEVlFRRApFeHBNWlhRbmN5QkZibU55ZVhCMElFRjFkR2h2Y21sMGVTQllNekFlRncweE9URXhNakl4TnpJNE1ERmFGdzB5Ck1EQXlNakF4TnpJNE1ERmFNQzh4TFRBckJnTlZCQU1USkdKbGJtZHBibmh6YzJ3dVlYQnBZM041YzNSbGMzUXUKWVhoM1lYbDBaWE4wTG01bGREQ0NBU0l3RFFZSktvWklodmNOQVFFQkJRQURnZ0VQQURDQ0FRb0NnZ0VCQUs3YQo1azFjdDN1Uko3Y1kyT0FrRXlzUEIyWE9MbEgySzBHRlk3NWRMQTVETjhkMUE4UGdWK1pFM1prZ29QSGJ6akhlCis3S3BrSXVaYytqbnp4SnowT2Q5eDFGU0dKNVBYNGlBOG5hSmdqS2NheHc5YmlzRVJmNGd3ZEdmQm90S3pCL0IKTDVJTE9pdW9YOXRUWHFGNXhsYVFuWm1MalZHYnlYUjlFTjZzQ1NSWEdWdUl0MVozRGRleHBGMzc2K01VY3hFYgpUZGFuRHdtZ0RGT3JGekF5bEV3ODBjT2hIUkhmdVlkc1g1WEV6L2VUQmFEQjd4OXozd0F0WW5zUmlRZS9QcGhZCmNSL0ZpaSttWEVjclhCNXh1UG93VmFlL2twUG9oclJBaGZDZ1RkQVNGaGNpbFpLN0xtcEJnUEprNnRpeEdSblgKSE5DYitmNm1meXhISGVGQ0NVOENBd0VBQWFPQ0Fua3dnZ0oxTUE0R0ExVWREd0VCL3dRRUF3SUZvREFkQmdOVgpIU1VFRmpBVUJnZ3JCZ0VGQlFjREFRWUlLd1lCQlFVSEF3SXdEQVlEVlIwVEFRSC9CQUl3QURBZEJnTlZIUTRFCkZnUVV2TUc2OTFIRGFJY2pBTWN3YVhlWTQ1RjRPd1V3SHdZRFZSMGpCQmd3Rm9BVXFFcHFZd1I5M2JybTBUbTMKcGtWbDcvT283S0V3YndZSUt3WUJCUVVIQVFFRVl6QmhNQzRHQ0NzR0FRVUZCekFCaGlKb2RIUndPaTh2YjJOegpjQzVwYm5RdGVETXViR1YwYzJWdVkzSjVjSFF1YjNKbk1DOEdDQ3NHQVFVRkJ6QUNoaU5vZEhSd09pOHZZMlZ5CmRDNXBiblF0ZURNdWJHVjBjMlZ1WTNKNWNIUXViM0puTHpBdkJnTlZIUkVFS0RBbWdpUmlaVzVuYVc1NGMzTnMKTG1Gd2FXTnplWE4wWlhOMExtRjRkMkY1ZEdWemRDNXVaWFF3VEFZRFZSMGdCRVV3UXpBSUJnWm5nUXdCQWdFdwpOd1lMS3dZQkJBR0MzeE1CQVFFd0tEQW1CZ2dyQmdFRkJRY0NBUllhYUhSMGNEb3ZMMk53Y3k1c1pYUnpaVzVqCmNubHdkQzV2Y21jd2dnRUVCZ29yQmdFRUFkWjVBZ1FDQklIMUJJSHlBUEFBZFFCZXAzUDUzMWJBNTdVMlNIM1EKU2VBeWVwR2FESVNoRWhLRUdIV1dnWEZGV0FBQUFXNlVYdlpsQUFBRUF3QkdNRVFDSUdIOTR1VEhuWExSRVNVdQpWN1JZU1VjekZZV1Bwd0JWUWpFWGtSTDNwbm9mQWlBY0s0c3RHQUZ4bXhxZDhWYkV4K3kwTGM5elVhK0lQVGROCjZyWUhHYnFVMndCM0FBZTNYQnZsZldqLzhiREdIU01WeDdybVYzeFhsTGRxN3J4aE9ocHAwNkljQUFBQmJwUmUKOW9VQUFBUURBRWd3UmdJaEFPcWxjdEwzdWl2dkIrdFZ6NjFIalRSaHlQQkw5UlVLUzUzdHhXTHdsR2Z5QWlFQQpzeTVmcFVVWDcwenJxV1JXOGgvcENRM3F4NFpKZVowVTZGU29BZzl0bWxVd0RRWUpLb1pJaHZjTkFRRUxCUUFECmdnRUJBRURsY2NzSkNQOU8vSVI5TWw0c0VFQkpCWmwxRDI0RDc1VlBpNDdXeUxOTFQ3aHpKMS9vZ2M1ejdodkQKeUNlamdhVTk0UHkrTE5pNXBseHdkMHRtLy9TSDhLTFFlanZVR1lyWjcrQnF5WGcxYXBvbjMxZU1Jd004QTlnNwpkek16RXZsQWNWK2dKcjVYNnV3Wjhnck5QSTg3VVRjZmtKR1VNdjdjUHgvdzRUUzhRQlpmZ0ZZN0tOZWZzRG14CjZvMzhhWTg3YS9OREF3N3Rsb1QyS2xBRWZMeE9CN0Zmd2pXa0hSWHBVNWxpenFuRFEvOVZXTWJLUkNoN1g5YlIKL0NvZWxaLzFDVjFQa3FwSlNodzU2VWxRTXJNTW45MzRLbHBkd2NKcCtncWNWOGxLQXQ1ckxmSVNPN1Jqb0lwWQo1THRYcmY0MlFyeW1TWEQrYjNCRzRnYkF0b3M9Ci0tLS0tRU5EIENFUlRJRklDQVRFLS0tLS0KLS0tLS1CRUdJTiBDRVJUSUZJQ0FURS0tLS0tCk1JSUVrakNDQTNxZ0F3SUJBZ0lRQ2dGQlFnQUFBVk9GYzJvTGhleW5DREFOQmdrcWhraUc5dzBCQVFzRkFEQS8KTVNRd0lnWURWUVFLRXh0RWFXZHBkR0ZzSUZOcFoyNWhkSFZ5WlNCVWNuVnpkQ0JEYnk0eEZ6QVZCZ05WQkFNVApEa1JUVkNCU2IyOTBJRU5CSUZnek1CNFhEVEUyTURNeE56RTJOREEwTmxvWERUSXhNRE14TnpFMk5EQTBObG93ClNqRUxNQWtHQTFVRUJoTUNWVk14RmpBVUJnTlZCQW9URFV4bGRDZHpJRVZ1WTNKNWNIUXhJekFoQmdOVkJBTVQKR2t4bGRDZHpJRVZ1WTNKNWNIUWdRWFYwYUc5eWFYUjVJRmd6TUlJQklqQU5CZ2txaGtpRzl3MEJBUUVGQUFPQwpBUThBTUlJQkNnS0NBUUVBbk5NTThGcmxMa2UzY2wwM2c3Tm9ZekRxMXpVbUdTWGh2YjQxOFhDU0w3ZTRTMEVGCnE2bWVOUWhZN0xFcXhHaUhDNlBqZGVUbTg2ZGljYnA1Z1dBZjE1R2FuL1BRZUdkeHlHa09sWkhQL3VhWjZXQTgKU014K3lrMTNFaVNkUnh0YTY3bnNIamNBSEp5c2U2Y0Y2czVLNjcxQjVUYVl1Y3Y5YlR5V2FOOGpLa0tRRElaMApaOGgvcFpxNFVtRVVFejlsNllLSHk5djZEbGIyaG9uemhUK1hocSt3M0JydmF3MlZGbjNFSzZCbHNwa0VObldBCmE2eEs4eHVRU1hndm9wWlBLaUFsS1FUR2RNRFFNYzJQTVRpVkZycW9NN2hEOGJFZnd6Qi9vbmt4RXowdE52amoKL1BJemFyazVNY1d2eEkwTkhXUVdNNnI2aENtMjFBdkEySDNEa3dJREFRQUJvNElCZlRDQ0FYa3dFZ1lEVlIwVApBUUgvQkFnd0JnRUIvd0lCQURBT0JnTlZIUThCQWY4RUJBTUNBWVl3ZndZSUt3WUJCUVVIQVFFRWN6QnhNRElHCkNDc0dBUVVGQnpBQmhpWm9kSFJ3T2k4dmFYTnlaeTUwY25WemRHbGtMbTlqYzNBdWFXUmxiblJ5ZFhOMExtTnYKYlRBN0JnZ3JCZ0VGQlFjd0FvWXZhSFIwY0RvdkwyRndjSE11YVdSbGJuUnlkWE4wTG1OdmJTOXliMjkwY3k5awpjM1J5YjI5MFkyRjRNeTV3TjJNd0h3WURWUjBqQkJnd0ZvQVV4S2V4cEhzc2NmcmI0VXVRZGYvRUZXQ0ZpUkF3ClZBWURWUjBnQkUwd1N6QUlCZ1puZ1F3QkFnRXdQd1lMS3dZQkJBR0MzeE1CQVFFd01EQXVCZ2dyQmdFRkJRY0MKQVJZaWFIUjBjRG92TDJOd2N5NXliMjkwTFhneExteGxkSE5sYm1OeWVYQjBMbTl5WnpBOEJnTlZIUjhFTlRBegpNREdnTDZBdGhpdG9kSFJ3T2k4dlkzSnNMbWxrWlc1MGNuVnpkQzVqYjIwdlJGTlVVazlQVkVOQldETkRVa3d1ClkzSnNNQjBHQTFVZERnUVdCQlNvU21wakJIM2R1dWJST2JlbVJXWHY4Nmpzb1RBTkJna3Foa2lHOXcwQkFRc0YKQUFPQ0FRRUEzVFBYRWZOaldEamRHQlg3Q1ZXK2RsYTVjRWlsYVVjbmU4SWtDSkx4V2g5S0VpazNKSFJSSEdKbwp1TTJWY0dmbDk2UzhUaWhSelp2b3JvZWQ2dGk2V3FFQm10enczV29kYXRnK1Z5T2VwaDRFWXByLzF3WEt0eDgvCndBcEl2SlN3dG1WaTRNRlU1YU1xclNERTZlYTczTWoydGNNeW81ak1kNmptZVdVSEs4c28vam9XVW9IT1Vnd3UKWDRQbzFRWXorM2RzemtEcU1wNGZrbHhCd1hSc1cxMEtYelBNVForc09QQXZleXhpbmRtamtXOGxHeStRc1JsRwpQZlorRzZaNmg3bWplbTBZK2lXbGtZY1Y0UElXTDFpd0JpOHNhQ2JHUzVqTjJwOE0rWCtRN1VOS0VrUk9iM042CktPcWtxbTU3VEgySDNlREpBa1NuaDYvRE5GdTBRZz09Ci0tLS0tRU5EIENFUlRJRklDQVRFLS0tLS0K
  # provide base64 encoded privatekey
  key: LS0tLS1CRUdJTiBQUklWQVRFIEtFWS0tLS0tCk1JSUV2Z0lCQURBTkJna3Foa2lHOXcwQkFRRUZBQVNDQktnd2dnU2tBZ0VBQW9JQkFRQ3UydVpOWExkN2tTZTMKR05qZ0pCTXJEd2Rsemk1UjlpdEJoV08rWFN3T1F6ZkhkUVBENEZmbVJOMlpJS0R4Mjg0eDN2dXlxWkNMbVhQbwo1ODhTYzlEbmZjZFJVaGllVDErSWdQSjJpWUl5bkdzY1BXNHJCRVgrSU1IUm53YUxTc3dmd1MrU0N6b3JxRi9iClUxNmhlY1pXa0oyWmk0MVJtOGwwZlJEZXJBa2tWeGxiaUxkV2R3M1hzYVJkKyt2akZITVJHMDNXcHc4Sm9BeFQKcXhjd01wUk1QTkhEb1IwUjM3bUhiRitWeE0vM2t3V2d3ZThmYzk4QUxXSjdFWWtIdno2WVdIRWZ4WW92cGx4SApLMXdlY2JqNk1GV252NUtUNklhMFFJWHdvRTNRRWhZWElwV1N1eTVxUVlEeVpPcllzUmtaMXh6UW0vbitwbjhzClJ4M2hRZ2xQQWdNQkFBRUNnZ0VBRk5jTUtkNUtGQlVwMlozQmczMXBOM0dVSFNNa3pDbjkzOUpKSUJBMHh3SmwKN0lUYXpRYTVFejNUOTRNM0MzeDZKK0YrdUQyVGQ3L3pXNmY5T3lMSW5ENldlZS9COVdSYWE0ZUszbXZuTTZjRwo4UmUxUUxWQ3JsWXpJNHZEbU9oeVNicVpzOXRZdElsZDIyTWxYVE9KV3hualhzQ09PRkxNQVBGRENIY1NvOXozClBDb2lzN2JTRWpqMHhIbUp5UWYwbzJpTmQ3bnhsTjQ0SFd5SUphR2tNVnpqSlZrZFBiOXlIVmxxNzRuQlVvQ0UKOHZua24rRmc3a3Q4SlJjN28wb250M2JwMEd5eHBJZHEzSlE3SDJFaXAycnhiZzNobXNjM1ZWa0RzUmpld2o4SApvdW85VkdleUlNNWlVWU83SVNTeFBxWTM4V2VTV3UwSWEzdy9qUTlaRVFLQmdRRFg4RzhGcmR1VUczaCtYakhXCmtVZVlkSVlnRTBRKzZQOThMbDl0L0tubVF4OVBGbVg4NG43R1lNOU5odCtrM25sTCtyMTE5L2pGcHU5TjVHek4KTGdmNzlwTzhVaWhFR1lHaWh6ZkFIRnd1MkN6bG9leGNnM3ZGWC9HL1BkdllVZHY3dnh4UUEwbFNxVlZhRTdYOApPNThCTnkwZDlMZjl3WjlyT3F0SDBEbFBpUUtCZ1FEUFMwT3VwZmZma0VXaXdielZmVVIxUzF5ZFNQWGsyTk5ECjlRZlZERWI1SHhKSTlCU1l1OExpUjE3U3BERTFrOUFJcHEyYUNNVnY4dkMzKzNIZ2dmeGhqTytocHVRcGtNaHIKbmJNTng4MlE3b25JenZOZnUwQVVobGU0NVl5VllPc0ZWbHRwUzhQWG00c0JOeXdiMktDZHNRKzFJUTlyUzAzMQpGaENMVkwvRUZ3S0JnUUNrTktWNFFCajFxMTRaV2krejVvMzNGTVRacDAwQ09kUHQ3cVdLMGRPdzBlSUJGaHRBCkRrd3hOblR0azE2RjFOZVFPMy9QTVYzdmoxM3ljWDE3R1VIaERFU1R0RFlDY3hMdE1MM29US2ljeHE1OWdJQm8KYVdPNVY1aFJ3UXhvbHZjZG5Obyt6Z0QzNXVTTXR1aHdnallMaXBXNGJkdHNEOHpXa2FxbDFXVi9ZUUtCZ1FDdgplakVqU1EvWnl0R0lBNlVNdkd3Vk51U0JxTit2Qi9WZms2ODdwSmI0RUZ0ME1scTFLRXpETEZPUzBMZHZlVjhqCjA2VWx2Y01WRDN6QzRqSDJNVk1xYVJuNXA4T0JoRFNGRlF3YjRFV2VLSyt1czdIR0drY1dtTnJ0aERSTHg2MXIKNlR5Y21DeUMrZ0xqMW9hYVUva3pSRTNkc016U3NQNmZPRHh0RmlMM3BRS0JnRnh1aDFLU2hxR2NTZmZGS0VINAo1Vm0yMi9YR2NpK1F5aHFEZzQ5NVZmNENTV2VTQWRneWhVNlhERWpuUEYyelFkcCthMWtWMzRRaDBsdFNlT3hLClhWaW9FazVTeDZheXBkcVdSald4ZUR0eWp3TWdmcWwyOW5tdDNTTVlDWS94TVd6alBJeGFGbUlzQmdVY1EyMlQKem5YZFYxSlhxUzVDTFNVanhhYWNsbzAvCi0tLS0tRU5EIFBSSVZBVEUgS0VZLS0tLS0K


nameOverride: ""
fullnameOverride: ""

serviceAccount:
  # Specifies whether a service account should be created
  create: true
  # The name of the service account to use.
  # If not set and create is true, a name is generated using the fullname template
  name:

podSecurityContext: {}
  # fsGroup: 2000

securityContext: {}
  # capabilities:
  #   drop:
  #   - ALL
  # readOnlyRootFilesystem: true
  # runAsNonRoot: true
  # runAsUser: 1000

service:
  type: LoadBalancer
  port: 80
  sslport: 443

ingress:
  enabled: false
  annotations: {}
    # kubernetes.io/ingress.class: nginx
    # kubernetes.io/tls-acme: "true"
  hosts:
    - host: chart-example.local
      paths: []
  tls: []
  #  - secretName: chart-example-tls
  #    hosts:
  #      - chart-example.local

resources: {}
  # We usually recommend not to specify default resources and to leave this as a conscious
  # choice for the user. This also increases chances charts run on environments with little
  # resources, such as Minikube. If you do want to specify resources, uncomment the following
  # lines, adjust them as necessary, and remove the curly braces after 'resources:'.
  # limits:
  #   cpu: 100m
  #   memory: 128Mi
  # requests:
  #   cpu: 100m
  #   memory: 128Mi

nodeSelector: {}

tolerations: []

affinity: {}
